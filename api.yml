# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: User registration successful. Returns the ID of the user.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '400':
          description: Bad Request. Validation failed. Error message contains failed fields and rules.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GeneralErrorResponse"
        '409':
          description: Conflict Error. Phone Number Already Exists
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GeneralErrorResponse"

  /login:
    post:
      summary: Authenticate User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad Request (Unsuccessful login)
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GeneralErrorResponse"

components:
  schemas:
    GeneralErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    RegisterRequest:
      type: object
      required:
        - phone_number
        - full_name
        - password
      properties:
        phone_number:
          type: string
          minLength: 10
          maxLength: 13
          pattern: '^\+62\d{9,12}$'
        full_name:
          type: string
          minLength: 3
          maxLength: 60
        password:
          type: string
          minLength: 6
          maxLength: 64
          pattern: '^(?=.*[A-Z])(?=.*\d)(?=.*\W).*$'

    RegisterResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        created_id:
          type: integer

    LoginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
          description: User's phone number
        password:
          type: string
          description: User's password
      
    LoginResponse:
      type: object
      required:
        - user_id
        - jwt_token
      properties:
        user_id:
          type: integer
          description: ID of the authenticated user
        jwt_token:
          type: string
          description: JWT token with RS256 algorithm